worker_processes 1;
 
events { worker_connections 1024; }
 
http {
 
    sendfile on;
 
 
    upstream docker-nodejs {
        server nodejs:3000;
    }
 

    server {
        listen 80;
        server_name yourapp.com;
        
        # redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }   
    }


  # Set cache dir
  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=microcache:5m max_size=1000m;


    server {
        # Enable HTTPS
        listen 443 ssl;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        server_name yourapp.com;
       
        # Use TLS only 
        ssl_protocols TLSv1.2;

        # ssl certificate
        ssl_certificate     /etc/nginx/yourapp.com.crt;
        ssl_certificate_key /etc/nginx/yourapp.com.key;

        # Use strong ciphers
        ssl_prefer_server_ciphers on;
        ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;

        # enable dhparam 
        # to Generate a DH key $ openssl genpkey -genparam -algorithm DH -out ./nginx/dhparam4096.pem -pkeyopt dh_paramgen_prime_len:4096
        ssl_dhparam         /etc/nginx/dhparam4096.pem;
  
        # Enable OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4;

        location / {
            proxy_pass         http://docker-nodejs;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;



            ##########Cache section############3
            # Setup var defaults
            set $no_cache "";
        
            # Disable caching fot admin area
            if ($request_uri ~* "/admin/") {
                set $no_cache "1";
            }
        

            # Disable caching for  logged in users based on http_cookie
            if ($http_cookie ~* "logged_in") {
                set $no_cache "1";
            }

            # If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
            if ($request_method !~ ^(GET|HEAD)$) {
                set $no_cache "1";
            }


            # Bypass cache if flag is set
            proxy_no_cache $no_cache;
            proxy_cache_bypass $no_cache;

            # Set cache zone
            proxy_cache microcache;

            # Set cache key to include identifying components
            proxy_cache_key $scheme$host$request_method$request_uri;

            # Only cache valid HTTP 200 responses for 1 second
            proxy_cache_valid 200 1s;

            # Serve from cache if currently refreshing
            proxy_cache_use_stale updating;

            # Set files larger than 1M to stream rather than cache
            proxy_max_temp_file_size 1M;

        }



        # Deny access to important files
        location /dirdeny {
                deny all;
                return 403;
        }


    }
}
