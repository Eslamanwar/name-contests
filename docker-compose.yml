version: '3'

services:
  nodejs:
    image: eslamanwar/name-contests:latest
    container_name: nodejs
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000 
      MONGO_DB: contests
      MONGO_PORT: 27017
      MONGO_HOSTNAME: mongodb
      PGHOST: postgres
      PGUSER: user
      PGDATABASE: contests
      PGPASSWORD: pass
      PGPORT: 5432 
    ports:
      - "3000:3000"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    links:
      - mongodb
      - postgres        
    depends_on:
      - mongodb       
      - postgres        
    networks:
      - app-network

  
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/yourapp.com.crt:/etc/nginx/yourapp.com.crt 
      - ./nginx/yourapp.com.key:/etc/nginx/yourapp.com.key
      - ./nginx/dhparam4096.pem:/etc/nginx/dhparam4096.pem        
    ports:
      - 80:80
      - 443:443   
    networks:
      - app-network

        
  seedmongo:
    image: eslamanwar/name-contests:latest
    environment:
      NODE_ENV: development    
    deploy:
      restart_policy:
        condition: none
    container_name: seedmongo
    command: node database/loadTestMongoData.js    
    links:
      - mongodb
    networks:
      - app-network        

  mongodb:
    image: mongo:4
    container_name: mongodb
    restart: unless-stopped
    env_file: .env
    volumes:     
      - mongodbdata:/data/db
    networks:
      - app-network  

  postgres:
    image: postgres:10.4
    ports:
      - "35432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass            
      POSTGRES_DB: contests
    volumes:
      - postgresdata:/var/lib/postgresql/data    
      - ./database:/docker-entrypoint-initdb.d/  
    networks:
      - app-network        

  datacontainer:
    image: busybox
    volumes:
      - datacontainer:/data    
    networks:
      - app-network
    command: /bin/echo

networks:
  app-network:
    driver: bridge

volumes:
  mongodbdata:
  node_modules:
  postgresdata:        
  datacontainer:
